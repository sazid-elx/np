{% paginate customer.addresses by 5 %}

<div class="page-width account-section">

  {% if settings.show_breadcrumbs %}
    <nav class="breadcrumb{% if settings.type_headers_align_text %} text-center{% endif %}" role="navigation" aria-label="breadcrumbs">
      <a href="{{ routes.account_url }}">{{ 'customer.account.title' | t }}</a>
      <span class="divider" aria-hidden="true">/</span>
      {{ 'customer.addresses.title' | t }}
    </nav>
  {% endif %}

  <div class="grid">
  
    <div class="grid__item medium-up--two-fifths page-links">
      <a class="page-link spa" id="order-return" href="#" data-handle="none">Orders & Return</a>
      <a class="page-link spa" id="wishlist" href="#" data-handle="none">My Wishlist</a>
      <a class="page-link spa active " id="account" href="#" data-handle="/account">My Account</a>
      <a class="page-link" href="{{ routes.account_logout_url }}" data-handle="/logout">Logout</a>
    </div>

    <div class="grid__item medium-up--three-fifths my-account-content spa-content">

      <div id="AddressNewForm" class="form-vertical js-address-form text-left hide">
        {% form 'customer_address', customer.new_address %}

          <h2>{{ 'customer.addresses.add_new' | t }}</h2>

          <div class="grid grid--small">

            <div class="grid__item one-half small--one-whole">
              <label for="AddressFirstNameNew">{{ 'customer.addresses.first_name' | t }}</label>
              <input type="text" id="AddressFirstNameNew" class="input-full input-border" name="address[first_name]" value="{{form.first_name}}" autocapitalize="words">
            </div>

            <div class="grid__item one-half small--one-whole">
              <label for="AddressLastNameNew">{{ 'customer.addresses.last_name' | t }}</label>
              <input type="text" id="AddressLastNameNew" class="input-full input-border" name="address[last_name]" value="{{form.last_name}}" autocapitalize="words">
            </div>

          </div>

          <label for="AddressCompanyNew">{{ 'customer.addresses.company' | t }}</label>
          <input type="text" id="AddressCompanyNew" class="input-full input-border" name="address[company]" value="{{form.company}}" autocapitalize="words">

          <label for="AddressAddress1New">{{ 'customer.addresses.address1' | t }}</label>
          <input type="text" id="AddressAddress1New" class="input-full input-border" name="address[address1]" value="{{form.address1}}" autocapitalize="words">

          <label for="AddressAddress2New">{{ 'customer.addresses.address2' | t }}</label>
          <input type="text" id="AddressAddress2New" class="input-full input-border" name="address[address2]" value="{{form.address2}}" autocapitalize="words">

          <div class="grid grid--small">
            <div class="grid__item medium-up--one-half">
              <label for="AddressCityNew">{{ 'customer.addresses.city' | t }}</label>
              <input type="text" id="AddressCityNew" class="input-full input-border" name="address[city]" value="{{form.city}}" autocapitalize="words">
            </div>
          

            <div
              class="grid__item medium-up--one-half js-address-country"
              data-country-id="AddressCountryNew"
              data-province-container-id="AddressProvinceContainerNew"
              data-province-id="AddressProvinceNew">
              <label for="AddressCountryNew">{{ 'customer.addresses.country' | t }}</label>
              <select id="AddressCountryNew" class="input-full input-border" name="address[country]" data-default="{{form.country}}">{{ country_option_tags }}</select>
            </div>

            <div class="grid__item" id="AddressProvinceContainerNew" style="display: none;">
              <label for="AddressProvinceNew">{{ 'customer.addresses.province' | t }}</label>
              <select id="AddressProvinceNew" class="input-full input-border" name="address[province]" data-default="{{form.province}}"></select>
            </div>

            <div class="grid__item medium-up--one-half">
              <label for="AddressZipNew">{{ 'customer.addresses.zip' | t }}</label>
              <input type="text" id="AddressZipNew" class="input-full input-border" name="address[zip]" value="{{form.zip}}" autocapitalize="characters">
            </div>

            <div class="grid__item medium-up--one-half">
              <label for="AddressPhoneNew">{{ 'customer.addresses.phone' | t }}</label>
              <input type="tel" id="AddressPhoneNew" class="input-full input-border" name="address[phone]" value="{{form.phone}}">
            </div>
          </div>

          <p>
            {{ form.set_as_default_checkbox }}
            <label for="address_default_address_new" class="inline">{{ 'customer.addresses.set_default' | t }}</label>
          </p>

          <p>
            <button type="submit" class="btn">
              {{ 'customer.addresses.add' | t }}
            </button>
          </p>
          <p>
            <button type="button" class="text-link address-new-toggle">{{ 'customer.addresses.cancel' | t }}</button>
          </p>

        {% endform %}
      </div>

      {% comment %}
        List all customer addresses with a unique edit form.
        Also add pagination in case they have a large number of addresses
      {% endcomment %}
      <header>
        <div class="np-h1 account-title">{{ 'customer.account.title' | t }}</div>
      </header>
      <div class="required-text hide">*Required</div>
      <div class="account-sub-header">{{ 'customer.account.details' | t }}</div>

 
  

<div class="default-customer-details">
  <div id="customer-info" class="">
          <div class="customer-info">
            <div>{{ customer.first_name }} {{ customer.last_name }}</div>
          </div>
  
          <div class="customer-contact-info">
            <div>Email: <span class="email">{{ customer.email }}</span></div>
          </div>
        </div>
  
        <div class="account-manipulation-links">
          <div class="account-manipulation-link"><a href="{{ routes.account_addresses_url }}">Update Preferences</a></div>
        </div>
  </div>

  {% for address in customer.addresses %}
       <div class="customer-addresses">
     <div id="customer-info" class="">

  
          <div class="customer-info">
            <div>{{ address.first_name }} {{ address.last_name }}</div>
            <div>{{ address.address1 }}</div>
            <div>{{ address.city }}, {{ address.province }}</div>
            <div><span>{{ address.zip }}</span>, <span>{{ address.country }}</span></div>
          </div>
  
          <div class="customer-contact-info">
            <div>Email: <span class="email">{{ customer.email }}</span></div>
            <div>Telephone:  {{address.phone }}</div>
          </div>
        </div>

        <p>
          <button type="button" class="update-account-link address-edit-toggle np-h10 main-update-btn" data-form-id="{{ address.id }}">Update Account Details</button>
          {% comment %} <button type="button" class="btn btn--secondary btn--small address-delete" data-form-id="{{ address.id }}" data-confirm-message="{{ 'customer.addresses.delete_confirm' | t }}">{{ 'customer.addresses.delete' | t }}</button> {% endcomment %}
        </p>

        <div id="EditAddress_{{ address.id }}" class="form-vertical js-address-form text-left hide edit-address">
          {% form 'customer_address', address %}
            <div class="grid grid--small">
              <div class="grid__item one-whole small--one-whole">
                <label class="np-h10 label-transform" for="AddressFirstName_{{form.id}}">{{ 'customer.addresses.first_name' | t }}*</label>
                <input type="text" placeholder="First Name Here" id="AddressFirstName_{{form.id}}" class="input-full input-border" name="address[first_name]" value="{{form.first_name}}" autocapitalize="words" required>
              </div>

              <div class="grid__item one-whole small--one-whole">
                <label class="np-h10 label-transform" for="AddressLastName_{{form.id}}">{{ 'customer.addresses.last_name' | t }}*</label>
                <input type="text" placeholder="Last Name Here" id="AddressLastName_{{form.id}}" class="input-full input-border" name="address[last_name]" value="{{form.last_name}}" autocapitalize="words" required>
              </div>
            
<!--               <div class="grid__item one-whole small--one-whole">
                <label class="np-h10 label-transform" for="AddressLastName_{{form.id}}">Email*</label>
                <input type="text" placeholder="Email Here" id="AddressLastName_{{form.id}}" class="input-full input-border" name="address[email]" value="{{customer.email}}" autocapitalize="words" required>
              </div> -->
              
              <div class="grid__item one-whole small--one-whole">
                <label class="np-h10 label-transform" for="AddressPhone_{{form.id}}">Phone Number</label>
                <input type="tel" placeholder="Phone Number Here" id="AddressPhone_{{form.id}}" class="input-full input-border" name="address[phone]" value="{{form.phone}}" required>
              </div>
            </div>
            {% comment %} <label for="AddressCompany_{{form.id}}">{{ 'customer.addresses.company' | t }}</label>
            <input type="text" id="AddressCompany_{{form.id}}" class="input-full input-border" name="address[company]" value="{{form.company}}" autocapitalize="words"> {% endcomment %}

            <label class="np-h10 label-transform" for="AddressAddress1_{{form.id}}">Address</label>
            <input type="text" placeholder="Address Line 1" id="AddressAddress1_{{form.id}}" class="input-full input-border" name="address[address1]" value="{{form.address1}}" autocapitalize="words" required>

            {% comment %} <label for="AddressAddress2_{{form.id}}">{{ 'customer.addresses.address2' | t }}</label> {% endcomment %}
            <input type="text" placeholder="Address Line 2" id="AddressAddress2_{{form.id}}" class="input-full input-border" name="address[address2]" value="{{form.address2}}" autocapitalize="words">

            {% comment %} <label for="AddressCity_{{form.id}}">{{ 'customer.addresses.city' | t }}</label> {% endcomment %}
            <input type="text" placeholder="Town" id="AddressCity_{{form.id}}" class="input-full input-border" name="address[city]" value="{{form.city}}" autocapitalize="words" required>
            
            {% comment %} <label for="AddressCounty_{{form.id}}">{{ 'customer.addresses.County' | t }}</label> {% endcomment %}
            <input type="text" placeholder="County" id="AddressCounty_{{form.id}}" class="input-full input-border" name="address[County]" value="{{form.County}}" autocapitalize="words" >

            

            <div class="grid grid--small">
              <div class="grid__item one-whole small--one-whole">
                {% comment %} <label for="AddressZip_{{form.id}}">{{ 'customer.addresses.zip' | t }}</label> {% endcomment %}
                <input type="text" id="AddressZip_{{form.id}}" placeholder="Postcode" class="input-full input-border" name="address[zip]" value="{{form.zip}}" autocapitalize="characters" required>
              </div>
            </div>

            <div
              class="js-address-country"
              data-country-id="AddressCountry_{{form.id}}"
              data-province-container-id="AddressProvinceContainer_{{form.id}}"
              data-province-id="AddressProvince_{{form.id}}">
              {% comment %} <label for="AddressCountry_{{form.id}}">{{ 'customer.addresses.country' | t }}</label> {% endcomment %}
              <select id="AddressCountry_{{form.id}}" placeholder="Country" class="input-full input-border" name="address[country]" data-default="{{form.country}}" required>{{ country_option_tags }}</select>
            </div>

<!--             <div id="AddressProvinceContainer_{{form.id}}" style="display: none;">
              {% comment %} <label for="AddressProvince_{{form.id}}">{{ 'customer.addresses.province' | t }}</label> {% endcomment %}
              <select id="AddressProvince_{{form.id}}" placeholder="County" class="input-full input-border" name="address[province]" data-default="{{form.province}}" required></select>
            </div> -->

            {% comment %} <p>
              {{ form.set_as_default_checkbox }}
              <label for="address_default_address_{{form.id}}" class="inline">{{ 'customer.addresses.set_default' | t }}</label>
            </p> {% endcomment %}

            <p>
              <button type="submit" class="update-account-link np-h10 secondary-tgl-btn">
                Update Account Details
              </button>
            </p>
            <p>
              <button type="button" class="text-link update-account-link np-h10 address-edit-toggle secondary-tgl-btn" data-form-id="{{ form.id }}">{{ 'customer.addresses.cancel' | t }}</button>
            </p>
          {% endform %}
        </div>
  
        <div class="account-manipulation-links">
          <div class="account-manipulation-link"><a href="{{ routes.account_addresses_url }}">Delete Account</a></div>
        </div>
    </div>


{% endfor %}

      {% if paginate.pages > 1 %}        
        {% include 'pagination' %}
      {% endif %}

    </div>
    <div class="grid__item medium-up--three-fifths orders-returns-content spa-content hide">
      <header>
        <div class="np-h1 page-title">Orders & Returns</div>
      </header>
      {% if customer.orders_count < 1 %}
        <div class="no-orders">You haven’t placed any orders yet.</div>
      {% else %}
        {% for order in customer.orders %}
          <div class="order-container-{{ order.id }} order-container">
            <div class="order-meta">
              <div class="order-date">
                <div class="order-date-key">Order Date</div>
                <div class="order-date-value">
                  {% assign date = order.created_at | split: " " %}
                  {{ date[0] }}
                </div>
              </div>
              <div class="order-number">
                <div class="order-number-key">Order Number</div>
                <div class="order-number-value">{{ order.id }}</div>
              </div>
              <div class="order-status">
                <div class="order-status-key">Order Status</div>
                <div class="order-status-value">{{ order.fulfillment_status_label }}</div>
              </div>
            </div>
            <div class="order-line-{{ order.id }} order-line {{ order.id }}">
              <hr class="line-css">
              <svg class="icon-down {{ order.id }} arrow-icon arrow-icon-down-{{ order.id }} arrow-icon-{{ order.id}}" width="9" height="6" viewBox="0 0 9 6" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path d="M8.49999 0.750016L4.75002 4.49999L1.00002 0.750014" stroke="#2B2725"/>
              </svg>
              <svg class="icon-up {{ order.id }} arrow-icon arrow-icon-up-{{ order.id }} arrow-icon-{{ order.id}} hide" width="9" height="6" viewBox="0 0 9 6" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path d="M1.00001 4.75001L4.74998 1.00004L8.49998 4.75002" stroke="#2B2725"/>
              </svg>  
            </div>
            <div>
            {% for item in order.line_items %}
              <div class="order-details-{{ order.id }} order-details hide">
                <div class="product-image">
                  {% comment %} <img src="{{ item.image | img_url: 'grande' }}" class="order-image"> {% endcomment %}
                  {% liquid assign image = item.image %}
                  {% liquid assign img_url = image | img_url: '1x1' | replace: '_1x1.', '_{width}x.' %}
                  <img class="order-image lazyload"
                    data-src="{{ img_url }}"
                    data-widths="[400, 600, 800, 1000, 1200, 1400, 1600, 1800, 2000, 2160, 2600, 3000, 3400, 3800, 4100]"
                    data-aspectratio="{{ image.aspect_ratio }}"
                    data-sizes="auto"
                    alt="{{ image.alt }}"
                  >
                </div>
                <div class="product-details">
                  <div class="product-name np-h10">{{ item.product.title }}</div>
                  <div class="product-size">
                    {% for variant in item.options_with_values %}
                      {% if variant.name == "Size" %}
                        Size: {{ variant.value }}
                      {% endif %}
                    {% endfor %}
                  </div>
                  <div class="product-quantity">Quantity: {{ item.quantity }}</div>
                  <div class="product-price">{{ item.final_line_price | money }}</div>
                  <div class="customer-name">Delivered to: <br>{{ order.customer.name }}</div>
                  {% if order.shipping_address %}
                    <div class="product-billing-address">{{ order.shipping_address.address1 }}</div>
                    <div class="town-county">{{ order.shipping_address.city }}, {{ order.shipping_address.province }}</div>
                    <div class="postcode-country">{{ order.shipping_address.zip }}, {{ order.shipping_address.country }}</div>
                  {% endif %}
                  <div class="return-link">RETURNS</div>
                </div>
              </div>
              <hr class="item-hr item-hr-{{ order.id }} hide">
            {% endfor %}
          </div>
        {% endfor %}
      {% endif %}

    </div>
  </div>
</div>

{% endpaginate %}

{% style %}
/* New development css scripts */

  .default-customer-details, .customer-addresses{
    width:74%;
    max-width:581px;
    padding: 20px 0;
    border-bottom: 1px solid rgba(43, 39, 37, 0.5);
  }

.grid__item.my-account-content, .grid__item.orders-returns-content {
  padding-left: 10px;
}
  
.my-account-content .required-text {
  margin-bottom: 41px;
  font-family: 'Intervogue';
  font-style: normal;
  font-weight: 400;
  font-size: 12.5px;
  line-height: 21px;
  letter-spacing: 0.05em;
  color: #2B2725;
}

.my-account-content .account-title {
  margin-bottom: 44px;
  text-transform: capitalize;
}
.my-account-content .account-sub-header {
  position: relative;
  margin-bottom: 30px;
  margin-bottom: 21px;
  font-size: 12.5px;
  line-height: 21px;
  letter-spacing: 0.05em;
  text-transform: capitalize;
}

.my-account-content .account-sub-header::after {
  position: absolute;
  top: 35px;
  left: 0;
  content: "";
  width: 74%;
  max-width: 581px;
  height: 1px;
  background-color: #2B2725;
}

.my-account-content .account-sub-header,.my-account-content #customer-info, .my-account-content #customer-info .customer-info, .my-account-content #customer-info .customer-contact-info {
  margin-bottom: 20px;
  font-family: 'Intervogue';
  font-size: 12.5px;
  line-height: 21px;
  letter-spacing: 0.05em;
  text-transform: capitalize;
  color: #2B2725;
}

  .input-full.input-border{
border-bottom:1px solid #2B2725;
  }

  .js-address-form.edit-address .np-h10.label-transform{
text-transform: capitalize;
  }

.my-account-content .customer-contact-info .email{
  text-transform: lowercase;
}

.my-account-content .update-account-link {
  border: 0.75px solid #2B2725;
  background-color: white;
  display: block;
  padding: 0.8em 0.5em;
  width: 347px;
  text-align: center;
  margin-bottom: 20px;
}

.my-account-content .update-account-link:hover {
  color: #ffffff;
  background-color: #111111;
}

.my-account-content .account-manipulation-links {
  margin-top: 29px;
}

.my-account-content .account-manipulation-link {
  margin-bottom: 14px;
  text-transform: uppercase;
  font-size: 12px;
  line-height: 14.4px;
  letter-spacing: 0.05em;
  color: #000000;
}

input, select{
  border: none;
  border-bottom: 1px solid;
  border-color: {{ settings.color_borders | default: "#1c1d1d" }};
  border-color: var(--colorBorder);
  width: 100%;
  max-width: 581px;
  padding: 8px 10px;
  padding-left: 0;
  border-radius: 0;
  font-size: 12.5px;
  line-height: 21px;
  letter-spacing: 0.05em;
}

input:active,
input:focus,
select:active,
select:focus {
  border: none;
  border-bottom: 1px solid;
  outline: none;
}
.my-account-content .edit-address {
  margin-top: 39px;
}

.my-account-content .edit-address label:not(.variant__button-label), .label {
  font-size: 12.5px;
  line-height: 21px;
  letter-spacing: 0.05em;
}

.page-links {
  display: flex;
  flex-direction: column;
  padding-top: 42px;
  padding-left: 114px;
  font-family: 'Intervogue';
  font-style: normal;
  font-weight: 400;
  font-size: 12.5px;
  line-height: 26px;
  letter-spacing: 0.05em;
  color: #2B2725;

  position: sticky;
  height: max-content;
  top: 100px;
}
.page-link.active {
  text-decoration: underline;
}

@media (max-width: 1000px) {
  .my-account-content .account-title {
    font-size: 70px;
    margin-bottom: 20px;
  }
}

@media (max-width: 960px) {
  .page-links {
    padding-left: 65px;
  }
}

@media (max-width: 768px) {
  .page-width.account-section{
    margin-top:-55px;
  }
  .grid__item.my-account-content, .grid__item.orders-returns-content {
    padding-left: 17px;
  }
  .page-links {
    display: flex;
    flex-direction: row;
    padding-left: 17px;
    justify-content: space-between;
    position: relative;
    height: max-content;
    top: 0px;
  }
  .page-link {
    margin: 0 5px;
  }
  .my-account-content .account-title {
    font-size: 70px;
    margin-bottom: 20px;
  }
    .my-account-content .update-account-link {
  border: 1px solid #2B2725;
}

  .my-account-content .account-sub-header::after {
  width: 85%;
}

  .default-customer-details, .customer-addresses{
    width:85%;
  }
  
}

  @media (max-width:500px){
    .my-account-content .update-account-link {
  width:100%
}
  }
  
/* order and returns */

.orders-returns-content hr.item-hr {
  margin-bottom: 16px;
  max-width: 581px;
  margin-right: 0;
  margin-left: 0;
}

.orders-returns-content hr.line-css {
  background: #2B2725;
  height: 1px;
  border: none;
  color: #2B2725;
}

.orders-returns-content .order-image {
  max-width: 164px;
}

.orders-returns-content .order-date {
  margin-right: 118px;
}

.orders-returns-content .order-details {
  display: flex;
}

.orders-returns-content .order-number {
  margin-right: 77px;
}

.orders-returns-content .product-image {
  margin-right: 73px;
}

.orders-returns-content .order-date-key, .orders-returns-content .order-status-key, .orders-returns-content .order-number-key {
  font-family: 'Intervogue';
  font-style: normal;
  font-weight: 400;
  font-size: 12.5px;
  line-height: 21px;
  letter-spacing: 0.05em;
  color: rgba(43, 39, 37, 0.5);
  margin-bottom: 3px;
}

.orders-returns-content .order-date-value, 
.orders-returns-content .order-status-value, 
.orders-returns-content .order-number-value, 
.orders-returns-content .product-size, 
.orders-returns-content .product-price, 
.orders-returns-content .customer-name, 
.orders-returns-content .product-billing-address, 
.orders-returns-content .town-county, 
.orders-returns-content .postcode-country,
.orders-returns-content .product-quantity,
.orders-returns-content div.return-link,
.orders-returns-content .no-orders {
  font-family: 'Intervogue';
  font-style: normal;
  font-weight: 400;
  font-size: 12.5px;
  line-height: 21px;
  letter-spacing: 0.05em;
  color: #2B2725;
}

.orders-returns-content .no-orders {
  margin-bottom: 73px;
}

.orders-returns-content .product-quantity {
  margin-bottom: 15px;
}

.orders-returns-content .product-price {
  margin-bottom: 15px;
}

.orders-returns-content .order-meta {
  display: flex;
  flex-direction: row;
  margin-bottom: -6px;
}

.orders-returns-content .order-line {
  position: relative;
  padding-top: 4px;
  padding-bottom: 0px;
  margin-bottom: 17px;
  cursor: pointer;
  z-index: 1;
  max-width: 581px;
}

.orders-returns-content .icon-down, .orders-returns-content .icon-up {
  position: absolute;
  top: 0;
  right: 0;
  z-index: -1;
}

.orders-returns-content .orders-returns-content label, .orders-returns-content .orders-returns-content .orders-returns-content .label-info {
  display: block;
  margin-bottom: 0;
}

.orders-returns-content label.input-label {
  font-family: 'Intervogue';
  font-style: normal;
  font-weight: 400;
  font-size: 12.5px;
  line-height: 21px;
  letter-spacing: 0.05em;
  color: #2B2725;
  text-transform: capitalize;
}

.orders-returns-content .form-vertical .contact-input, .form-vertical select.contact-input {
  margin-bottom: 51px;
}
.orders-returns-content .required-text {
  margin-bottom: 48px;
  font-family: 'Intervogue';
  font-style: normal;
  font-weight: 400;
  font-size: 12.5px;
  line-height: 21px;
  letter-spacing: 0.05em;
  color: #2B2725;
  text-align: start;
}
.orders-returns-content .description {
    margin-bottom: 38px;
    max-width: 585px;
  }
  .orders-returns-content .orders-returns-content {
    display: flex;
    flex-direction: row;
    max-width:1440px;
  }
  .orders-returns-content .success-section, .submission-with-error {
    display: flex;
    align-items: center;
    gap: 24px;
    margin-top: 40px;
  }
  .orders-returns-content input, .orders-returns-content select, .orders-returns-content textarea{
    border: none;
    border-bottom: 1px solid;
    border-color: {{ settings.color_borders | default: "#1c1d1d" }};
    border-color: var(--colorBorder);
    width: 100%;
    max-width: 581px;
    padding: 8px 10px;
    padding-left: 0;
    border-radius: 0;
    font-size: 12.5px;
    line-height: 21px;
    letter-spacing: 0.05em;
  }

  .orders-returns-content input:active,
  .orders-returns-content input:focus,
  .orders-returns-content select:active,
  .orders-returns-content select:focus {
    border: none;
    border-bottom: 1px solid;
    outline: none;
  }
  .orders-returns-content textarea {
    border: 1px solid #2B2725;
  }

  .orders-returns-content div.return-link {
    border: 0.75px solid #2B2725;
    background-color: white;
    display: none;
    text-align: center;
    padding: 0;
    margin-top: 32px;
    margin-bottom: 20px;
    max-width: 126px;
    padding: 6px 10px;
  }

  .orders-returns-content div.return-link:hover {
    color: #ffffff;
    background-color: #111111;
  }

  .orders-returns-content .page-title {
    margin-bottom: 72px;
  }

@media (max-width: 1300px) {
  .orders-returns-content .page-title {
    font-size: 90px;
    margin-bottom: 20px;
  }
}


@media (max-width: 1200px) {
  .orders-returns-content .page-title {
    font-size: 80px;
    margin-bottom: 20px;
  }
}


@media (max-width: 1000px) {
  .orders-returns-content .order-meta {
    margin-bottom: 8px;
  }
  .orders-returns-content .page-title {
    font-size: 60px;
    margin-bottom: 20px;
  }
  .orders-returns-content .order-date {
    margin-right: 73px;
  }
  .orders-returns-content .order-line {
    padding-bottom: 0px;
  }
}

@media (max-width: 768px) {
  .orders-returns-content .product-quantity {
    margin-bottom: 5px;
  }
  .orders-returns-content .product-price {
    margin-bottom: 10px;
  }
  .orders-returns-content .product-image {
    margin-right: 25px;
  }
  .orders-returns-content .order-line {
    padding-bottom: 0px;
  }
  .page-links {
    padding-left: 17px;
  }
  .page-link {
    margin: 0 5px;
  }
  .page-title {
    font-size: 70px;
    margin-bottom: 20px;
  }
  .orders-returns-content {
    flex-direction: column;
  }
  

}

@media (max-width: 500px) {
  .orders-returns-content .product-image {
    margin-right: 12px;
  }
  .page-title {
    font-size: 50px;
    margin-bottom: 20px;
  }
  .my-account-content .account-title {
    font-size: 45px;
  }
  .orders-returns-content .order-date {
    margin-right: 4px;
  }
  .orders-returns-content .order-number {
    margin-right: 50px;
    margin-left: 20px;
  }
}

@media (max-width: 440px) {
  .orders-returns-content .page-title {
    font-size: 45px;
    margin-bottom: 20px;
  }
}
{% endstyle %}

<script>
  function toggleMainUpdateBtn(){
    
    const mainBtn = document.querySelector(".main-update-btn")
    const customerInfo = document.querySelector(".customer-info")
    const customerContactInfo = document.querySelector(".customer-contact-info")
    const requireText = document.querySelector(".required-text")
    if(mainBtn){
      mainBtn.addEventListener('click', ()=>{
      if (!mainBtn.classList.contains("hide")){
        mainBtn.classList.add("hide")
      }
      customerInfo.classList.add("hide")
      customerContactInfo.classList.add("hide")
      requireText.classList.remove("hide")
    })
    }
    const secondaryBtns = document.querySelectorAll(".secondary-tgl-btn")
    secondaryBtns.forEach(btn=>{
      btn.addEventListener('click', ()=>{
        mainBtn.classList.remove('hide')
        customerInfo.classList.remove("hide")
        customerContactInfo.classList.remove("hide")
        requireText.classList.add("hide")
      })
    })
  }
  toggleMainUpdateBtn()
  {% comment %} order return {% endcomment %}
  document.querySelectorAll(".order-line").forEach(order=>{
    order.addEventListener('click', (e=>{
      const orderId = e.target.classList[2]
      const targets = document.querySelectorAll(`.order-details-${orderId}`)
      const arrowTargets = document.querySelectorAll(`.arrow-icon-${orderId}`)
      const itemHr = document.querySelectorAll(`.item-hr-${orderId}`)
      targets.forEach(target=>{
        if (target.classList.contains("hide")) {
          target.classList.remove("hide")
        }else {
          target.classList.add("hide")
        }
      })

      arrowTargets.forEach(arrow=>{
        if (arrow.classList.contains("hide")){
          arrow.classList.remove("hide")
        }else {
          arrow.classList.add("hide")
        }
      })
      itemHr.forEach(itemHr=>{
        if ( itemHr.classList.contains("hide")) {
          itemHr.classList.remove("hide")
        }
        else {
          itemHr.classList.add("hide")
        }
      })
    }))
  })
  document.querySelectorAll(".icon-down").forEach(icon=>{
    icon.addEventListener('click', (e=>{
      const orderId = e.target.classList[1]
      const iconUp = document.querySelector(`.arrow-icon-up-${orderId}`)
      const targets = document.querySelectorAll(`.order-details-${orderId}`)
      const itemHr = document.querySelectorAll(`.item-hr-${orderId}`)
      iconUp.classList.remove("hide")
      e.target.classList.add("hide")
      targets.forEach(target=>{
        if (target.classList.contains("hide")) {
          target.classList.remove("hide")
        }else {
          target.classList.add("hide")
        }
      })
      itemHr.forEach(itemHr=>{
        if ( itemHr.classList.contains("hide")) {
          itemHr.classList.remove("hide")
        }
        else {
          itemHr.classList.add("hide")
        }
      })
    }))
  })
  document.querySelectorAll(".icon-up").forEach(icon=>{
    icon.addEventListener('click', (e=>{
      const orderId = e.target.classList[1]
      const icondown = document.querySelector(`.arrow-icon-down-${orderId}`)
      const targets = document.querySelectorAll(`.order-details-${orderId}`)
      const itemHr = document.querySelectorAll(`.item-hr-${orderId}`)
      icondown.classList.remove("hide")
      e.target.classList.add("hide")
      targets.forEach(target=>{
        if (target.classList.contains("hide")) {
          target.classList.remove("hide")
        }else {
          target.classList.add("hide")
        }
      })
      itemHr.forEach(itemHr=>{
        if ( itemHr.classList.contains("hide")) {
          itemHr.classList.remove("hide")
        }
        else {
          itemHr.classList.add("hide")
        }
      })
    }))
  })

  //content changing functionality

  function changeActiveClass(pageLinks, event) {
    for( var i=0; i < pageLinks.length; i++) {
      if (pageLinks[i] === event.target){
        const activeValue = event.target.classList.contains("active")
        switch(activeValue) {
          case true: break;
          case false: event.target.classList.add("active"); break;
        }
      }
      else {
        pageLinks[i].classList.remove("active")
      }
    }
  }

  function changeContent(id) {
    const ordersReturns = document.querySelector(".orders-returns-content")
    const account = document.querySelector(".my-account-content")
    if (id === "account") {
      ordersReturns.classList.add("hide")
      account.classList.remove("hide")
    }
    else if (id === "order-return") {
      ordersReturns.classList.remove("hide")
      account.classList.add("hide")
    }
  }

  function spaFunctionality() {
    var pageLinks = document.querySelectorAll(".page-link.spa")
    pageLinks.forEach(link=>{
      link.addEventListener("click", (e=>{
        e.preventDefault()
        changeActiveClass(pageLinks, e)
        const id = e.target.id
        changeContent(id)
      }))
    })
  }
  spaFunctionality()
</script>
